# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html

security:

    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Leo\UserBundle\Entity\User:
            algorithm: bcrypt
            cost: 12

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [in_memory, leo_db_provider]
        leo_db_provider:
            entity:
                class: LeoUserBundle:User
                property: username
        in_memory:
            memory:
                users:
                    super_admin:
                        password: super_admin
                        roles: 'ROLE_SUPER_ADMIN'
                    x:
                        password: x
                        roles: 'ROLE_SUPER_ADMIN'
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN]

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
#            provider: leo_db_provider
            pattern: ^/
            anonymous: ~

            # activate different ways to authenticate

#            http_basic: ~
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            form_login:
                login_path: leo_user_login
                check_path: leo_user_login

                username_parameter: username
                password_parameter: password

#                target_path_parameter: leo_user_homepage
#                use_referer: true
#                default_target_path: leo_user_logout
#                always_use_default_target_path: true

#            form_login: ~
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html


            # ...
            logout:
                path:   leo_user_logout
#                target: leo_user_homepage
#                success_handler:      ~
#                invalidate_session:   true

    access_control:
        - { path: ^/admin/user/new, methods: [POST, GET], roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/user/\d+/edit, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin/user/\d+/show, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin/user, roles: ROLE_ADMIN }
        - { path: ^/admin/role, roles: ROLE_SUPER_ADMIN }
        - { path: /new, roles: IS_AUTHENTICATED_FULLY }
#        - { path: /edit, allow_if: "has_role('ROLE_ADMIN') or user " }
#        - { path: /delete, roles: "has_role('ROLE_ADMIN') or " }